{"ast":null,"code":"var _jsxFileName = \"/home/equipment/VSCodeProjects/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nconst style = `\nh1,\na {\n  font-family: 'Arial';\n}\n\nul {\n  padding: 0;\n}\n\nli {\n  list-style: none;\n  margin: 5px 0;\n}\n\na {\n  text-decoration: none;\n  color: blue;\n}\n\na:hover {\n  opacity: 0.6;\n}\n`;\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: `jsx-${style.__hash}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  className: `jsx-${style.__hash}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: `jsx-${style.__hash}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/posts/[id]\",\n  as: `/posts/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: `jsx-${style.__hash}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, show.name))))), __jsx(_JSXStyle, {\n  id: style.__hash,\n  __self: this\n}, style));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/equipment/VSCodeProjects/hello-next/pages/index.js"],"names":["Layout","Link","fetch","style","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAAf;;AAyBA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,aAAX;AAAyB,EAAA,EAAE,EAAG,UAASD,IAAI,CAACC,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF;AAAA;AAAA;AAAA,UADF;;AAkBAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst style = `\nh1,\na {\n  font-family: 'Arial';\n}\n\nul {\n  padding: 0;\n}\n\nli {\n  list-style: none;\n  margin: 5px 0;\n}\n\na {\n  text-decoration: none;\n  color: blue;\n}\n\na:hover {\n  opacity: 0.6;\n}\n`\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/posts/[id]\" as={`/posts/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n    <style jsx>\n      {style}\n    </style>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}